const $=(s,c=document)=>c.querySelector(s); const $$=(s,c=document)=>[...c.querySelectorAll(s)];
function navActive(){const p=location.pathname.split('/').pop()||'index.html'; $$('.links a').forEach(a=>{a.style.opacity=(a.getAttribute('href')===p)?'1':'.85'; a.style.textDecoration=(a.getAttribute('href')===p)?'underline':'none';});}
function fmt(n){return Number(n||0).toLocaleString('en-US');}
function baselineFrom(neigh,unit){const d=window.DRP_DATA; const n=d.neighborhoods[neigh]&&d.neighborhoods[neigh][unit]; if(!n) return {adr:600,occ:0.6,avg_stay_nights:3.0}; return n;}
function opsAdjustments(selected){const d=window.DRP_DATA.ops_stops; let feeBump=0,varBump=0; selected.forEach(k=>{if(d[k]){feeBump+=d[k].fee_bump_pct||0; varBump+=d[k].var_per_stay_bump||0;}}); return {feeBump,varBump};}
function turnoversPerMonth(occ,avgStay){const nights=30*occ; return Math.max(1, Math.round(nights/Math.max(1,avgStay)));}
function cohostEstimate({neigh,unit,adr,occPct,baseFeePct,fixed,ops,includeFixed}){const base=baselineFrom(neigh,unit); const occ=(occPct||(base.occ*100))/100; const nights=30; const gross=Math.round((adr||base.adr)*occ*nights); const {feeBump,varBump}=opsAdjustments(ops); const feePct=(baseFeePct||DRP_DATA.cohost_base_fee_pct)+feeBump; const stays=turnoversPerMonth(occ, base.avg_stay_nights); const d=DRP_DATA.variable_per_stay; const varPerStay=(d.cleaning[unit]||150)+d.restock+d.linen+varBump; const variable=Math.round(stays*varPerStay); const fixedMonthly=includeFixed?(fixed.internet+fixed.insurance+fixed.hoa):0; const feeMAD=Math.round(gross*(feePct/100)); const ownerNet=Math.round(gross-feeMAD-variable-fixedMonthly); return {gross,feePct,feeMAD,stays,variable,fixedMonthly,ownerNet, avgStay: base.avg_stay_nights};}
function baseCohostEstimate({neigh,unit,baseFeePct,fixed,ops,includeFixed}){const base=baselineFrom(neigh,unit); return cohostEstimate({neigh,unit,adr:base.adr,occPct:base.occ*100,baseFeePct,fixed,ops,includeFixed});}
function leaseEstimate({neigh,unit,includeFixed,ops,targetMarginPct}){const base=baselineFrom(neigh,unit); const fixed=DRP_DATA.fixed_expenses; const co=cohostEstimate({neigh,unit,adr:base.adr,occPct:base.occ*100,baseFeePct:DRP_DATA.cohost_base_fee_pct,fixed,ops,includeFixed}); const marginMAD=Math.round((targetMarginPct/100)*co.gross); let rentCap=Math.max(0, co.gross - co.variable - (includeFixed?co.fixedMonthly:0) - marginMAD); const {feeBump}=opsAdjustments(ops); const penaltyPct=Math.min(10, feeBump); rentCap=Math.round(rentCap*(1-penaltyPct/100)); const offerLow=Math.round(rentCap*0.95); const offerHigh=Math.round(rentCap*1.05); const suggested=Math.max(0,offerLow); return {gross:co.gross,stays:co.stays,variable:co.variable,fixedMonthly:includeFixed?co.fixedMonthly:0,marginMAD,rentCap,offerLow,offerHigh,suggested, avgStay: co.avgStay};}
function readOps(c){return $$('input[type=checkbox][data-op]:checked',c).map(i=>i.dataset.op);}
function readFixed(c){return {internet: $('#fx-internet',c)?.checked?DRP_DATA.fixed_expenses.internet:0, insurance: $('#fx-insurance',c)?.checked?DRP_DATA.fixed_expenses.insurance:0, hoa: $('#fx-hoa',c)?.checked?DRP_DATA.fixed_expenses.hoa:0};}
function wireCohostPage(kind){navActive(); const form=$('#calc-form'); const neighSel=$('#neigh'), unitSel=$('#unit'); const adrInput=$('#adr'), occInput=$('#occ'); function syncBaseline(){const base=baselineFrom(neighSel.value,unitSel.value); if(!adrInput.dataset.touched) adrInput.value=base.adr; if(!occInput.dataset.touched) occInput.value=Math.round(base.occ*100); $('#avgstay').textContent=base.avg_stay_nights.toFixed(1);} ['change','input'].forEach(ev=>{adrInput.addEventListener(ev,()=>adrInput.dataset.touched=true); occInput.addEventListener(ev,()=>occInput.dataset.touched=true);}); neighSel.addEventListener('change',syncBaseline); unitSel.addEventListener('change',syncBaseline); syncBaseline(); function run(){const ops=readOps(form); const fixed=readFixed(form); const res=cohostEstimate({neigh:neighSel.value, unit:unitSel.value, adr:parseFloat(adrInput.value), occPct:parseFloat(occInput.value), baseFeePct:DRP_DATA.cohost_base_fee_pct, fixed, ops, includeFixed:true}); const baseRes=baseCohostEstimate({neigh:neighSel.value,unit:unitSel.value,baseFeePct:DRP_DATA.cohost_base_fee_pct,fixed,ops,includeFixed:true}); $('#kpi-gross').textContent=fmt(res.gross); $('#kpi-fee').textContent=`${res.feePct.toFixed(0)}% â†’ ${fmt(res.feeMAD)}`; $('#kpi-stays').textContent=fmt(res.stays); $('#kpi-variable').textContent=fmt(res.variable); $('#kpi-fixed').textContent=fmt(res.fixedMonthly); $('#kpi-owner').textContent=fmt(res.ownerNet); $('#kpi-base-owner').textContent=fmt(baseRes.ownerNet);} form.addEventListener('input',run); $('#calc').addEventListener('click',run); run();}
function wireLeasePage(kind){navActive(); const form=$('#calc-form'); const neighSel=$('#neigh'), unitSel=$('#unit'); function run(){const ops=readOps(form); const res=leaseEstimate({neigh:neighSel.value, unit:unitSel.value, includeFixed:true, ops, targetMarginPct:DRP_DATA.lease_target_margin_pct}); $('#headline-val').textContent=fmt(res.suggested); $('#d-gross').textContent=fmt(res.gross); $('#d-stays').textContent=fmt(res.stays); $('#d-variable').textContent=fmt(res.variable); $('#d-fixed').textContent=fmt(res.fixedMonthly); $('#d-margin').textContent=fmt(res.marginMAD); $('#d-rentcap').textContent=fmt(res.rentCap); $('#d-avgstay').textContent=res.avgStay.toFixed(1);} form.addEventListener('input',run); $('#calc').addEventListener('click',run); run();}
window.addEventListener('DOMContentLoaded', ()=>{const page=document.body.dataset.page; if(page==='cohost-fur'||page==='cohost-unfur'){wireCohostPage(page);} else if(page==='lease-fur'||page==='lease-unfur'){wireLeasePage(page);} else {navActive();}});
